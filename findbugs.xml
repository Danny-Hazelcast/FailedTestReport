<?xml version="1.0" encoding="UTF-8"?>
<BugCollection version='2.0.2' threshold='medium' effort='min'>
    <file classname='com.hazelcast.nio.serialization.ByteArrayObjectDataInput'>
        <BugInstance type='RR_NOT_CHECKED' priority='Normal' category='BAD_PRACTICE' message='com.hazelcast.nio.serialization.ByteArrayObjectDataInput.readFully(byte[]) ignores result of com.hazelcast.nio.serialization.ByteArrayObjectDataInput.read(byte[])' lineNumber='202'/><BugInstance type='RR_NOT_CHECKED' priority='Normal' category='BAD_PRACTICE' message='com.hazelcast.nio.serialization.ByteArrayObjectDataInput.readFully(byte[], int, int) ignores result of com.hazelcast.nio.serialization.ByteArrayObjectDataInput.read(byte[], int, int)' lineNumber='206'/></file><file classname='com.hazelcast.nio.serialization.ByteBufferObjectDataInput'><BugInstance type='RR_NOT_CHECKED' priority='Normal' category='BAD_PRACTICE' message='com.hazelcast.nio.serialization.ByteBufferObjectDataInput.readFully(byte[]) ignores result of com.hazelcast.nio.serialization.ByteBufferObjectDataInput.read(byte[])' lineNumber='181'/><BugInstance type='RR_NOT_CHECKED' priority='Normal' category='BAD_PRACTICE' message='com.hazelcast.nio.serialization.ByteBufferObjectDataInput.readFully(byte[], int, int) ignores result of com.hazelcast.nio.serialization.ByteBufferObjectDataInput.read(byte[], int, int)' lineNumber='185'/></file><file classname='com.hazelcast.nio.serialization.DefaultSerializers$ObjectSerializer'><BugInstance type='OS_OPEN_STREAM' priority='Normal' category='BAD_PRACTICE' message='com.hazelcast.nio.serialization.DefaultSerializers$ObjectSerializer.write(ObjectDataOutput, Object) may fail to close stream' lineNumber='212'/></file><file classname='com.hazelcast.nio.ssl.SSLSocketChannelWrapper'><BugInstance type='SWL_SLEEP_WITH_LOCK_HELD' priority='Normal' category='MT_CORRECTNESS' message='com.hazelcast.nio.ssl.SSLSocketChannelWrapper.handshake() calls Thread.sleep() with a lock held' lineNumber='124'/></file><file classname='com.hazelcast.spi.impl.BasicInvocation'><BugInstance type='VO_VOLATILE_INCREMENT' priority='Normal' category='MT_CORRECTNESS' message='Increment of volatile field com.hazelcast.spi.impl.BasicInvocation.invokeCount in com.hazelcast.spi.impl.BasicInvocation.doInvoke()' lineNumber='230'/><BugInstance type='VO_VOLATILE_INCREMENT' priority='Normal' category='MT_CORRECTNESS' message='Increment of volatile field com.hazelcast.spi.impl.BasicInvocation.invokeCount in com.hazelcast.spi.impl.BasicInvocation.resolveResponse(Object)' lineNumber='403'/></file><file classname='com.hazelcast.spi.impl.BasicOperationScheduler'><BugInstance type='NP_NONNULL_PARAM_VIOLATION' priority='High' category='CORRECTNESS' message='Null passed for nonnull parameter of java.util.concurrent.ThreadFactory.newThread(Runnable) in com.hazelcast.spi.impl.BasicOperationScheduler.initOperationThreads(BasicOperationScheduler$OperationThread[], ThreadFactory)' lineNumber='128'/></file><file classname='com.hazelcast.spi.impl.PartitionIteratingOperation$ResponseQueue'><BugInstance type='RV_RETURN_VALUE_IGNORED_BAD_PRACTICE' priority='Normal' category='BAD_PRACTICE' message='exceptional return value of java.util.concurrent.BlockingQueue.offer(Object) ignored in com.hazelcast.spi.impl.PartitionIteratingOperation$ResponseQueue.sendResponse(Object)' lineNumber='110'/></file><file classname='com.hazelcast.util.ConcurrentReferenceHashMap$Segment'><BugInstance type='SE_TRANSIENT_FIELD_NOT_RESTORED' priority='Normal' category='BAD_PRACTICE' message='The field com.hazelcast.util.ConcurrentReferenceHashMap$Segment.count is transient but isn&apos;t set by deserialization' lineNumber='-1'/><BugInstance type='SE_TRANSIENT_FIELD_NOT_RESTORED' priority='Normal' category='BAD_PRACTICE' message='The field com.hazelcast.util.ConcurrentReferenceHashMap$Segment.modCount is transient but isn&apos;t set by deserialization' lineNumber='-1'/></file><file classname='com.hazelcast.util.ResponseQueueFactory$LockBasedResponseQueue'><BugInstance type='RV_RETURN_VALUE_IGNORED_BAD_PRACTICE' priority='Normal' category='BAD_PRACTICE' message='exceptional return value of java.util.concurrent.locks.Condition.await(long, TimeUnit) ignored in com.hazelcast.util.ResponseQueueFactory$LockBasedResponseQueue.poll(long, TimeUnit)' lineNumber='70'/></file><file classname='com.hazelcast.util.ServiceLoader'><BugInstance type='DMI_BLOCKING_METHODS_ON_URL' priority='High' category='PERFORMANCE' message='invocation of java.net.URL.equals(Object), which blocks to do domain name resolution, in com.hazelcast.util.ServiceLoader.findHighestReachableClassLoader(URL, ClassLoader, String)' lineNumber='180'/></file><file classname='com.hazelcast.util.ServiceLoader$URLDefinition'><BugInstance type='DMI_BLOCKING_METHODS_ON_URL' priority='High' category='PERFORMANCE' message='invocation of java.net.URL.equals(Object), which blocks to do domain name resolution, in com.hazelcast.util.ServiceLoader$URLDefinition.equals(Object)' lineNumber='302'/><BugInstance type='DMI_BLOCKING_METHODS_ON_URL' priority='High' category='PERFORMANCE' message='invocation of java.net.URL.hashCode(), which blocks to do domain name resolution, in com.hazelcast.util.ServiceLoader$URLDefinition.hashCode()' lineNumber='311'/></file><file classname='com.hazelcast.util.StringUtil'><BugInstance type='DM_DEFAULT_ENCODING' priority='High' category='I18N' message='Found reliance on default encoding in com.hazelcast.util.StringUtil.bytesToString(byte[]): new String(byte[])' lineNumber='36'/><BugInstance type='DM_DEFAULT_ENCODING' priority='High' category='I18N' message='Found reliance on default encoding in com.hazelcast.util.StringUtil.bytesToString(byte[], int, int): new String(byte[], int, int)' lineNumber='32'/><BugInstance type='DM_DEFAULT_ENCODING' priority='High' category='I18N' message='Found reliance on default encoding in com.hazelcast.util.StringUtil.stringToBytes(String): String.getBytes()' lineNumber='40'/></file><file classname='com.hazelcast.util.VersionCheck'><BugInstance type='DM_DEFAULT_ENCODING' priority='High' category='I18N' message='Found reliance on default encoding in com.hazelcast.util.VersionCheck.toMD5String(String): String.getBytes()' lineNumber='139'/><BugInstance type='REC_CATCH_EXCEPTION' priority='Normal' category='STYLE' message='Exception is caught when Exception is not thrown in com.hazelcast.util.VersionCheck.fetchWebService(String)' lineNumber='158'/></file>

    <Error></Error><Project><SrcDir>/home/ec2-user/statsGen/hazelcast/hazelcast/src/main/java</SrcDir><SrcDir>/home/ec2-user/statsGen/hazelcast/hazelcast/src/test/java</SrcDir></Project></BugCollection>